import loadCards from './api/loadCardsApi.js';
import renderProductCards from './moduls/renderProductCards.js';
import categoriesFilter from './moduls/categoriesFilter.js';
import animateCart from './moduls/animateCart.js';
import storeOrder from './moduls/storeOrder.js';
import renderOrder from './moduls/renderOrder.js';
import showCardDetails from './moduls/showCardDetails.js';
import searchCards from './moduls/searchCards.js';
import renderContacts from './moduls/renderContacts.js';

const navItems = document.querySelectorAll('.nav__item');
const productCardsList = document.querySelector('.product-cards__list');
const cart = document.querySelector('.header__cart');
const searchBtn = document.querySelector('.header__search-btn');
const contactsItem = document.querySelectorAll('.footer__contacts-item');
const productCardsTitle = document.querySelector('.product-cards__title');

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function renderAbout(productCardsTitle, productCardsList) {
  productCardsList.innerHTML = `<section class="about">
    <div class="about__img-wrap">
      <img class="about__img" src="fon-about.webp">
    </div>
    <div class="about__info">
      <p>–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ —É–≤–ª–µ—á—ë–Ω–Ω—ã—Ö —Ä—ã–±–æ–ª–æ–≤–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ä—ã–±–∞–ª–∫–∞ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ö–æ–±–±–∏, –∞ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏. 
      –ö–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å –∑–Ω–∞–µ—Ç, —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è —Ä—ã–±–∞–ª–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è. 
      –ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º—ã —Å–æ–∑–¥–∞–ª–∏ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω ‚Äî –º–µ—Å—Ç–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –ª—é–±–∏—Ç–µ–ª—å –∏ 
      –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –Ω–∞–π–¥—ë—Ç –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —É–¥–∞—á–Ω–æ–≥–æ —É–ª–æ–≤–∞.</p>
      <p>–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å —Ä—ã–±–∞–ª–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ–π, –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∏ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–π. 
      –ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–±–∏—Ä–∞–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å–Ω–∞—Å—Ç–∏ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å 
      –≤–∞–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å –≤ –ª—é–±—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.</p>
      <p>–° –Ω–∞–º–∏ –≤—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º —Ä—ã–±–æ–ª–æ–≤–Ω—ã–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º, –±—É–¥—å —Ç–æ —É—Ç—Ä–µ–Ω–Ω–∏–π –∫–ª—ë–≤ –Ω–∞ –æ–∑–µ—Ä–µ 
      –∏–ª–∏ –æ—Ö–æ—Ç–∞ –∑–∞ —Ç—Ä–æ—Ñ–µ–π–Ω–æ–π —â—É–∫–æ–π –Ω–∞ —Ä–µ–∫–µ.</p>
      <p><strong>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∏—Ä —Ä—ã–±–∞–ª–∫–∏! üåä</strong></p>
    </div>
  </section>`;
  productCardsTitle.innerHTML = '–æ –Ω–∞—Å';
  navItems.forEach(el => el.classList.remove('nav__item-active'));
}

// –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
function showAboutInfo(productCardsTitle, contactsItem, productCardsList) {
  contactsItem[0].addEventListener('click', () => {
    window.location.hash = 'about';
    renderAbout(productCardsTitle, productCardsList);
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
storeOrder(productCardsList, cart);

// –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
productCardsList.addEventListener('click', (e) => {
  if (!e.target.classList.contains('order__close')) return;

  const orderItem = e.target.closest('.order__item');
  const index = +orderItem.dataset.index;

  let order = JSON.parse(localStorage.getItem('order')) || [];

  // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –ø–æ –∏–Ω–¥–µ–∫—Å—É
  order.splice(index, 1);

  localStorage.setItem('order', JSON.stringify(order));

  orderItem.remove();

  // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
  const sum = order.reduce((acc, el) => acc + parseInt(el.price, 10), 0);
  const orderSumEl = document.querySelector('.order__sum');
  if(orderSumEl) orderSumEl.textContent = `–∏—Ç–æ–≥–æ: ${sum} ‚ÇΩ`;

  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è
  if(order.length === 0){
    document.querySelector('.order__list').innerHTML = `<li style="padding: 5px">–Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ</li>`;
  } else {
    // –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è ‚Äî –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    const orderItems = document.querySelectorAll('.order__item');
    orderItems.forEach((item, i) => item.dataset.index = i);
  }
});

// –ü–æ–∫–∞–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ –∫–ª–∏–∫—É
function renderOrderClick() {
  const headerCartWrap = document.querySelector('.header__cart-wrap');
  headerCartWrap.addEventListener('click', () => renderOrder(navItems, productCardsList));
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
window.addEventListener('scroll', () => {
  localStorage.setItem('scrollPosition', window.scrollY);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
  const isFirstLoad = !localStorage.getItem('scrollPosition');

  const cardsArray = await loadCards();
  await renderContacts();
  categoriesFilter(navItems, productCardsList, cardsArray);
  searchCards(searchBtn, productCardsList, navItems); 
  renderOrderClick();
  showAboutInfo(productCardsTitle, contactsItem, productCardsList);

  const hash = window.location.hash.replace('#', '');
  if (hash === 'about') {
    renderAbout(productCardsTitle, productCardsList);
    return; // –≤—ã—Ö–æ–¥–∏–º, –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º
  }

  const loadCategory = localStorage.getItem('category');
  if(!loadCategory) {
    navItems[0].classList.add('nav__item-active');
    renderProductCards('rods', productCardsList, cardsArray);
    showCardDetails(productCardsList, cardsArray, cart, navItems, productCardsTitle);
  } else if(loadCategory === 'cart') {
    renderOrder(navItems, productCardsList);
  } else {
    renderProductCards(loadCategory, productCardsList, cardsArray);
    showCardDetails(productCardsList, cardsArray, cart, navItems, productCardsTitle);
    const navActive = localStorage.getItem('nav-active');
    if(navActive) navItems[navActive].classList.add('nav__item-active');
  }

  // –°–∫—Ä–æ–ª–ª –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  if (isFirstLoad) {
    window.scrollTo(0, 0);
  }
});

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
window.addEventListener('load', () => {
  const isFirstLoad = !localStorage.getItem('scrollPosition');
  if (!isFirstLoad) {
    const scrollPosition = parseInt(localStorage.getItem('scrollPosition'), 10) || 0;
    window.scrollTo(0, scrollPosition);
  }
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–µ—à–∞ ===
